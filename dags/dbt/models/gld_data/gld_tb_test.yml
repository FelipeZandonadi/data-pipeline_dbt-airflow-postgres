version: 2

models:
  - name: dim_date
    description: "Tabela de dimensão de datas, com cada registro representando um dia único."
    columns:
      - name: id_date_sk
        description: "Chave primária da dimensão de data, no formato YYYYMMDD."
        tests:
          - not_null
          - unique
          # Adicionando um teste de padrão para garantir o formato YYYYMMDD
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: "^[0-9]{8}$"
      - name: date
        description: "Data completa no formato DATE."
        tests:
          - not_null
      - name: year
        description: "Ano extraído da data."
        tests:
          - not_null
      - name: month
        description: "Mês extraído da data (1-12)."
        tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
      - name: day
        description: "Dia extraído da data (1-31)."
        tests:
          - not_null
      - name: day_week # Mantido como day_week, mas o script SQL original tem day_of_week. Ajustar se necessário.
        description: "Nome do dia da semana."
        tests:
          - not_null
          - accepted_values:
              values: ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday']
      - name: quarter
        description: "Trimestre do ano (1-4)."
        tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4] # Assumindo que o macro 'day_of_week' e 'catch_date_information' preenchem corretamente estes valores.

  - name: dim_location
    description: "Tabela de dimensão de localidades, representando combinações únicas de estado e cidade."
    columns:
      - name: id_state_city_sk
        description: "Chave primária da dimensão de localidade, concatenando estado e cidade (ex: SP-Sao Paulo)."
        tests:
          - not_null
          - unique
      - name: state
        description: "Sigla do estado."
        tests:
          - not_null
          # - dbt_expectations.expect_column_value_lengths_to_equal: # Exemplo se estados forem sempre 2 chars
          #     value: 2
      - name: city
        description: "Nome da cidade."
        tests:
          - not_null

  - name: dim_product_category
    description: "Tabela de dimensão de categorias de produtos."
    columns:
      - name: id_product_category_sk
        description: "Chave primária da dimensão de categoria de produto (MD5 hash do nome da categoria)."
        tests:
          - not_null
          - unique
      - name: product_category_name
        description: "Nome da categoria do produto."
        tests:
          - not_null

  - name: dim_product
    description: "Tabela de dimensão de produtos."
    columns:
      - name: id_product
        description: "Chave primária da dimensão de produto (ID original do produto)."
        tests:
          - not_null
          - unique
      - name: key_product_category
        description: "Chave estrangeira para a dimensão de categoria de produto."
        tests:
          - not_null
          - relationships:
              to: ref('dim_product_category')
              field: id_product_category_sk
      - name: weight_g
        description: "Peso do produto em gramas."
        tests:
          - dbt_utils.accepted_range: # Ou apenas not_null se preferir
              min_value: 0
      - name: length_cm
        description: "Comprimento do produto em centímetros."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
      - name: height_cm
        description: "Altura do produto em centímetros."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
      - name: width_cm
        description: "Largura do produto em centímetros."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0

  - name: agr_customer
    description: "Tabela agregada com métricas por cliente."
    columns:
      - name: id_customer
        description: "Identificador único do cliente (customer_unique_id)."
        tests:
          - not_null
          - unique
      - name: key_state_city
        description: "Chave estrangeira para a dimensão de localidade (estado-cidade)."
        tests:
          - not_null
          - relationships:
              to: ref('dim_location')
              field: id_state_city_sk
      - name: qt_items_purchased
        description: "Quantidade total de itens comprados pelo cliente."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
      - name: qt_orders
        description: "Quantidade total de pedidos feitos pelo cliente."
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 1 # Um cliente agregado deve ter pelo menos 1 pedido
      - name: tpv
        description: "Valor total de compra (Total Purchase Value) do cliente."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
      - name: average_ticket
        description: "Ticket médio por pedido do cliente."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0

  - name: agr_sellers
    description: "Tabela agregada com métricas por vendedor."
    columns:
      - name: id_seller
        description: "Identificador único do vendedor."
        tests:
          - not_null
          - unique
      - name: key_state_city
        description: "Chave estrangeira para a dimensão de localidade (estado-cidade do vendedor)."
        tests:
          - not_null
          - relationships:
              to: ref('dim_location')
              field: id_state_city_sk
      - name: total_sold_order_qt
        description: "Quantidade total de pedidos vendidos pelo vendedor."
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
      - name: total_sold_item_qt
        description: "Quantidade total de itens vendidos pelo vendedor."
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
      - name: total_unique_customer_qt
        description: "Quantidade total de clientes únicos atendidos pelo vendedor."
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
      - name: total_sales_amount
        description: "Valor total das vendas do vendedor."
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0

  - name: fact_orders
    description: "Tabela fato contendo informações sobre cada pedido."
    columns:
      - name: id_order
        description: "Identificador único do pedido."
        tests:
          - not_null
          - unique
      - name: id_customer
        description: "Identificador do cliente associado ao pedido."
        tests:
          - not_null
          - relationships:
              to: ref('agr_customer') # Referencia a tabela agregada de clientes
              field: id_customer
      - name: key_purchase_date
        description: "Chave para dim_date referente à data da compra."
        tests:
          - relationships: # Permite nulos se a data puder ser nula, caso contrário not_null
              to: ref('dim_date')
              field: id_date_sk
      - name: key_approved_date
        description: "Chave para dim_date referente à data de aprovação."
        tests:
          - relationships:
              to: ref('dim_date')
              field: id_date_sk
      - name: key_delivered_carrier_date
        description: "Chave para dim_date referente à data de entrega à transportadora."
        tests:
          - relationships:
              to: ref('dim_date')
              field: id_date_sk
      - name: key_delivered_customer_date
        description: "Chave para dim_date referente à data de entrega ao cliente."
        tests:
          - relationships:
              to: ref('dim_date')
              field: id_date_sk
      - name: key_estimated_delivery_date
        description: "Chave para dim_date referente à data estimada de entrega."
        tests:
          - relationships:
              to: ref('dim_date')
              field: id_date_sk
      - name: order_status
        description: "Status atual do pedido."
        tests:
          - not_null
          - accepted_values: # Valores baseados nos status comuns em e-commerce
              values: ['delivered', 'shipped', 'canceled', 'invoiced', 'processing', 'approved', 'created', 'unavailable', 'returned']
      - name: payments_installments_amount
        description: "Número de parcelas do pagamento."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
      - name: qt_order_items
        description: "Quantidade de itens no pedido."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
      - name: total_purchase_price
        description: "Valor total da compra do pedido."
        tests:
          - dbt_utils.accepted_range:
              min_value: 0
      - name: is_customer_first_order
        description: "Booleano indicando se é o primeiro pedido do cliente."
        tests:
          - not_null
          - accepted_values:
              values: [true, false]

  - name: fact_order_product
    description: "Tabela fato detalhando os produtos de cada pedido."
    columns:
      - name: id_order_product_sk
        description: "Chave primária da tabela, concatenando id_order e id_product."
        tests:
          - not_null
          - unique
      - name: id_order
        description: "Chave estrangeira para a tabela fact_orders."
        tests:
          - not_null
          - relationships:
              to: ref('fact_orders')
              field: id_order
      - name: id_product
        description: "Chave estrangeira para a tabela dim_product."
        tests:
          - not_null
          - relationships:
              to: ref('dim_product')
              field: id_product
      - name: id_seller
        description: "Chave estrangeira para a tabela agr_sellers."
        tests:
          - not_null
          - relationships:
              to: ref('agr_sellers')
              field: id_seller
      - name: product_qty_each
        description: "Quantidade deste produto específico no pedido."
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 1
      - name: product_price_each
        description: "Preço unitário do produto no momento da compra."
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
      - name: product_price_total
        description: "Preço total para este produto no pedido (quantidade * preço unitário)."
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
      - name: product_shipping_cost
        description: "Custo de frete para este produto no pedido."
        tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0

  - name: fact_order_reviews
    description: "Tabela fato para as avaliações dos pedidos."
    columns:
      - name: id_review_order_sk
        description: "Chave primária da tabela, concatenando id_review e id_order."
        tests:
          - not_null
          - unique
      - name: id_review
        description: "Identificador único da avaliação."
        tests:
          - not_null
      - name: id_order
        description: "Chave estrangeira para a tabela fact_orders."
        tests:
          - not_null
          - relationships:
              to: ref('fact_orders')
              field: id_order
      - name: key_creation_date
        description: "Chave para dim_date referente à data de criação da avaliação."
        tests:
          - relationships: # Permite nulos se a data puder ser nula
              to: ref('dim_date')
              field: id_date_sk
      - name: key_answer_date
        description: "Chave para dim_date referente à data de resposta da avaliação."
        tests:
          - relationships: # Permite nulos, pois nem toda avaliação tem resposta
              to: ref('dim_date')
              field: id_date_sk
      - name: score
        description: "Nota da avaliação (geralmente 1 a 5)."
        tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4, 5] # Ajustar se o range for diferente
      - name: comment_title
        description: "Título do comentário da avaliação (pode ser nulo)."
        # Nenhum teste de not_null, pois pode ser opcional
      - name: comment_message
        description: "Mensagem do comentário da avaliação (pode ser nulo)."
        # Nenhum teste de not_null, pois pode ser opcional